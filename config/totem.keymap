//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
    require-prior-idle-ms = <125>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Tab {
            timeout-ms = <30>;
            key-positions = <11 10>;
            bindings = <&kp TAB>;
            layers = <0 1 4 2 3>;
        };

        Enter {
            bindings = <&kp RETURN>;
            key-positions = <17 18>;
            timeout-ms = <30>;
        };

        Undo {
            bindings = <&kp LC(Z)>;
            key-positions = <21 22>;
            timeout-ms = <30>;
            layers = <0 1 2 3 4>;
        };

        Cut {
            bindings = <&kp LC(X)>;
            key-positions = <22 23>;
            timeout-ms = <30>;
            layers = <0 1 2 3 4>;
        };

        Copy {
            bindings = <&kp LC(C)>;
            key-positions = <23 24>;
            timeout-ms = <30>;
            layers = <0 1 2 3 4>;
        };

        Paste {
            bindings = <&kp LC(V)>;
            key-positions = <22 23 24>;
            timeout-ms = <30>;
            layers = <0 1 2 3 4>;
        };

        left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 2>;
            timeout-ms = <30>;
            layers = <0>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <5 7>;
            timeout-ms = <30>;
            layers = <0 1 2 3 4>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <14 12>;
            timeout-ms = <30>;
            layers = <0 1 2 3 4>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <15 17>;
            timeout-ms = <30>;
            layers = <0>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <25 23>;
            timeout-ms = <30>;
            layers = <0 1 2 3 4>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <26 28>;
            timeout-ms = <30>;
            layers = <0>;
        };

        game_layer_toggle {
            bindings = <&tog 5>;
            key-positions = <20 31>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <17 16>;
            timeout-ms = <30>;
        };

        num_layer {
            bindings = <&mo 1>;
            key-positions = <12 13>;
            timeout-ms = <30>;
            layers = <0>;
        };

        sym_layer {
            bindings = <&mo 2>;
            key-positions = <12 11>;
            timeout-ms = <30>;
            layers = <0>;
        };

        nav_layer {
            bindings = <&mo 3>;
            key-positions = <12 11 13>;
            timeout-ms = <30>;
            layers = <0>;
        };

        func_layer {
            bindings = <&mo 4>;
            key-positions = <34 35>;
            timeout-ms = <30>;
        };

        window_manager {
            bindings = <&mo 7>;
            key-positions = <10 11 12 13>;
            timeout-ms = <35>;
            layers = <0>;
        };
    };

    behaviors {
        Mod_Tap_L: Mod_Tap_L {
            compatible = "zmk,behavior-hold-tap";
            label = "MTL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <35 36 37 26 27 15 16 5 6 7 17 28 29 18 8 9 19 30 31 34 33 32>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <175>;
            hold-trigger-on-release;
        };

        Mod_Tap_R: Mod_Tap_R {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34 35 36 37>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <175>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        Base {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
              &kp Q  &kp W  &kp E       &kp R           &kp T        &kp Y          &kp U      &kp I       &kp O    &kp P
              &kp A  &kp S  &kp D       &kp F           &kp G        &kp H          &kp J      &kp K       &kp L    &kp SEMI
&kp LEFT_GUI  &kp Z  &kp X  &kp C       &kp V           &kp B        &kp N          &kp M      &kp COMMA   &kp DOT  &kp FSLH  &mt LEFT_ALT SQT
                            &kp ESCAPE  &kp LEFT_SHIFT  &kp SPACE    &kp BACKSPACE  &kp LCTRL  &kp DELETE
            >;
        };

        Number {
            bindings = <
        &kp TAB       &trans  &trans  &trans  &trans    &kp PLUS   &kp N7  &kp N8  &kp N9  &kp ASTERISK
        &kp LEFT_GUI  &trans  &trans  &trans  &trans    &kp MINUS  &kp N4  &kp N5  &kp N6  &kp SLASH
&trans  &trans        &trans  &trans  &trans  &trans    &kp N0     &kp N1  &kp N2  &kp N3  &kp EQUAL     &trans
                              &trans  &trans  &trans    &trans     &trans  &trans
            >;

            label = "NUM";
        };

        Symbol {
            bindings = <
        &kp TAB       &trans  &trans  &trans  &trans    &kp TILDE  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &trans
        &kp LEFT_GUI  &trans  &trans  &trans  &trans    &kp GRAVE  &kp DOLLAR       &kp PERCENT   &kp CARET             &trans
&trans  &trans        &trans  &trans  &trans  &trans    &kp PIPE   &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp NON_US_BACKSLASH  &trans
                              &trans  &trans  &trans    &trans     &trans           &trans
            >;

            label = "SYM";
        };

        Navigation {
            bindings = <
        &kp TAB       &trans  &trans  &trans  &trans    &kp C_STOP        &kp HOME                 &kp PAGE_DOWN      &kp PG_UP        &kp END
        &kp LEFT_GUI  &trans  &trans  &trans  &trans    &kp C_PLAY_PAUSE  &kp LEFT                 &kp DOWN           &kp UP_ARROW     &kp RIGHT
&trans  &trans        &trans  &trans  &trans  &trans    &kp C_MUTE        &mt C_REWIND C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &mt C_FAST_FORWARD C_NEXT  &kp LALT
                              &trans  &trans  &trans    &trans            &trans                   &trans
            >;

            label = "NAV";
        };

        Function {
            bindings = <
            &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &trans    &kp F7  &kp F8  &kp F9  &kp F10
            &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &trans    &kp F4  &kp F5  &kp F6  &kp F11
&bt BT_CLR  &trans         &trans         &trans         &trans         &trans           &kp CLCK  &kp F1  &kp F2  &kp F3  &kp F12  &kp PRINTSCREEN
                                          &trans         &trans         &trans           &trans    &trans  &trans
            >;

            label = "FUNC";
        };

        Game {
            bindings = <
          &kp TAB    &kp Q  &kp X       &kp E        &kp R        &trans  &trans  &trans  &trans  &trans
          &kp LCTRL  &kp A  &kp W       &kp D        &kp F        &trans  &trans  &trans  &trans  &trans
&kp LALT  &kp LSHFT  &kp Z  &kp S       &kp C        &kp V        &trans  &trans  &trans  &trans  &trans  &trans
                            &kp ESCAPE  &lt 6 ENTER  &kp SPACE    &trans  &trans  &trans
            >;

            label = "GAME";
        };

        GamePlus {
            bindings = <
       &kp NUMBER_1  &kp N2  &kp N3  &kp N4  &kp N5    &trans  &trans  &trans  &trans  &trans
       &trans        &trans  &trans  &trans  &kp H     &trans  &trans  &trans  &trans  &trans
&to 0  &trans        &trans  &trans  &kp T   &kp Y     &trans  &trans  &trans  &trans  &trans  &trans
                             &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "GAME+";
        };

        WM {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans     &kp LG(N7)        &kp LG(N8)  &kp LG(N9)  &trans
        &trans  &trans  &trans  &trans  &trans    &kp LG(W)  &kp LG(N4)        &kp LG(N5)  &kp LG(N6)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp LG(NUMBER_1)  &kp LG(N2)  &kp LG(N3)  &trans  &trans
                        &trans  &trans  &trans    &trans     &trans            &trans
            >;
        };
    };
};
