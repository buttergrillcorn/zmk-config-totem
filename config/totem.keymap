//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
    require-prior-idle-ms = <125>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <17 16>;
            timeout-ms = <50>;
        };

        Undo {
            bindings = <&kp LC(Z)>;
            key-positions = <21 22>;
            timeout-ms = <50>;
            layers = <0 2 1>;
        };

        Cut {
            bindings = <&kp LC(X)>;
            key-positions = <22 23>;
            timeout-ms = <50>;
            layers = <0 1 3>;
        };

        Copy {
            bindings = <&kp LC(C)>;
            key-positions = <23 24>;
            timeout-ms = <50>;
            layers = <0 1 3>;
        };

        Paste {
            bindings = <&kp LC(V)>;
            key-positions = <22 23 24>;
            timeout-ms = <50>;
            layers = <0 1 3>;
        };

        left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 2>;
            timeout-ms = <30>;
            layers = <0>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <5 7>;
            timeout-ms = <30>;
            layers = <0 1 3>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <14 12>;
            timeout-ms = <30>;
            layers = <0 1 3>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <15 17>;
            timeout-ms = <30>;
            layers = <0>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <25 23>;
            timeout-ms = <30>;
            layers = <0 1 3>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <26 28>;
            timeout-ms = <30>;
            layers = <0>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <17 18>;
            timeout-ms = <50>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        L_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <10 11>;
            timeout-ms = <50>;
            layers = <0 2 3>;
        };

        R_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <19 18>;
            timeout-ms = <50>;
            layers = <0 2 3>;
        };
    };

    behaviors {
        Mod_Tap_L: Mod_Tap_L {
            compatible = "zmk,behavior-hold-tap";
            label = "MTL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <35 36 37 26 27 15 16 5 6 7 17 28 29 18 8 9 19 30 31 34 33 32>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <175>;
            hold-trigger-on-release;
        };

        Mod_Tap_R: Mod_Tap_R {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34 35 36 37>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <175>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        Base {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
       &kp Q  &kp W  &kp E                &kp R  &kp T        &kp Y          &kp U  &kp I      &kp O    &kp P
       &kp A  &kp S  &kp D                &kp F  &kp G        &kp H          &kp J  &kp K      &kp L    &kp SEMI
&mo 6  &kp Z  &kp X  &kp C                &kp V  &kp B        &kp N          &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt LEFT_ALT SQT
                     &mt LEFT_SHIFT CAPS  &sl 1  &kp SPACE    &kp BACKSPACE  &sl 2  &sk LCTRL
            >;
        };

        Navigation {
            bindings = <
       &kp TAB       &trans        &trans     &trans          &trans    &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP   &kp END     &kp C_VOL_UP
       &sk LEFT_GUI  &sk LEFT_ALT  &sk RCTRL  &sk LEFT_SHIFT  &trans    &kp LEFT        &kp DOWN       &kp UP_ARROW  &kp RIGHT   &kp ENTER
&to 0  &trans        &trans        &trans     &trans          &trans    &kp C_PREVIOUS  &kp C_VOL_DN   &kp C_VOL_UP  &kp C_NEXT  &kp C_PLAY_PAUSE  &kp C_MUTE
                                   &trans     &trans          &trans    &trans          &trans         &trans
            >;

            label = "NAV";
        };

        Number {
            label = "NUM";
            bindings = <
       &kp TAB       &trans        &trans     &trans          &trans    &kp EQUAL  &kp N7  &kp N8  &kp N9  &kp GRAVE
       &sk LEFT_GUI  &sk LEFT_ALT  &sk RCTRL  &sk LEFT_SHIFT  &trans    &kp MINUS  &kp N4  &kp N5  &kp N6  &kp ENTER
&to 0  &tog 4        &sl 3         &trans     &trans          &trans    &kp N0     &kp N1  &kp N2  &kp N3  &kp BSLH   &trans
                                   &trans     &trans          &trans    &trans     &trans  &trans
            >;
        };

        Function {
            bindings = <
       &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3    &bt BT_SEL 4     &bt BT_CLR_ALL  &kp F7  &kp F8  &kp F9  &kp F10
       &sk LEFT_GUI   &sk LEFT_ALT   &sk LCTRL      &sk LEFT_SHIFT  &bt BT_CLR       &out OUT_BLE    &kp F4  &kp F5  &kp F6  &kp F11
&to 0  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3   &bt BT_DISC 4    &out OUT_USB    &kp F1  &kp F2  &kp F3  &kp F12  &kp PRINTSCREEN
                                     &trans         &trans          &trans           &trans          &trans  &trans
            >;

            label = "FUNC";
        };

        Game {
            bindings = <
            &kp LCTRL       &kp Q  &kp X  &kp E    &kp R        &trans  &trans  &trans  &trans  &trans
            &kp LEFT_SHIFT  &kp A  &kp W  &kp D    &kp F        &trans  &trans  &trans  &trans  &trans
&kp ESCAPE  &kp LEFT_ALT    &kp Z  &kp S  &kp C    &kp V        &trans  &trans  &trans  &trans  &trans  &trans
                                   &mo 5  &kp TAB  &kp SPACE    &trans  &trans  &trans
            >;

            label = "GAME";
        };

        GamePlus {
            bindings = <
       &kp NUMBER_1  &kp N2  &kp N3  &kp N4  &kp N5    &trans  &trans  &trans  &trans  &trans
       &kp I         &kp Y   &kp T   &kp H   &kp G     &trans  &trans  &trans  &trans  &trans
&to 0  &trans        &trans  &kp B   &kp N   &kp M     &trans  &trans  &trans  &trans  &trans  &trans
                             &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "GAME+";
        };

        WindowManager {
            bindings = <
        &kp LG(N1)  &kp LG(N2)  &kp LG(N3)     &kp LG(N4)    &kp LG(N5)       &kp LG(N6)        &kp LG(N7)            &kp LG(N8)     &kp LG(N9)  &trans
        &kp LG(Q)   &kp LG(W)   &kp LG(D)      &kp LG(F)     &kp LG(G)        &kp LG(H)         &kp LG(J)             &kp LG(K)      &kp LG(L)   &kp LG(ENTER)
&trans  &kp LG(X)   &kp LG(C)   &kp LG(E)      &kp LG(B)     &kp LG(N)        &trans            &trans                &trans         &trans      &trans         &trans
                                &kp LG(LSHFT)  &kp LEFT_GUI  &kp LG(LCTRL)    &kp LC(LEFT_ALT)  &kp LG(LC(LEFT_ALT))  &kp LG(LCTRL)
            >;

            label = "WM";
        };
    };
};
