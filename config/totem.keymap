//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <11 12 13>;
        };

        Enter {
            bindings = <&kp RETURN>;
            key-positions = <16 17 18>;
        };

        Undo {
            bindings = <&kp LC(Z)>;
            key-positions = <21 22>;
        };

        Cut {
            bindings = <&kp LC(X)>;
            key-positions = <22 23>;
        };

        Copy {
            bindings = <&kp LC(C)>;
            key-positions = <23 24>;
        };

        Paste {
            bindings = <&kp LC(V)>;
            key-positions = <22 23 24>;
        };

        left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 4>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <5 6>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <13 14>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <15 16>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <24 25>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <26 27>;
        };

        game_layer_toggle {
            bindings = <&tog 4>;
            key-positions = <20 31>;
        };

        function_layer {
            bindings = <&mo 3>;
            key-positions = <34 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
                &kp Q       &kp W       &kp E         &kp R        &kp T        &kp Y      &kp U          &kp I        &kp O       &kp P
                &mt LGUI A  &mt LALT S  &mt LCTRL D   &mt LSHFT F  &kp G        &kp H      &mt RSHFT J    &mt RCTRL K  &mt RALT L  &mt RGUI SEMICOLON
&kp LEFT_SHIFT  &kp Z       &kp X       &kp C         &kp V        &kp B        &kp N      &kp M          &kp COMMA    &kp DOT     &kp FSLH            &kp SQT
                                        &kp LEFT_GUI  &kp SPACE    &lt 1 TAB    &lt 2 RET  &kp BACKSPACE  &kp DELETE
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        number_layer {
            bindings = <
        &trans        &trans        &trans     &trans          &trans    &kp EQUAL       &kp N7  &kp N8    &kp N9  &kp TILDE
        &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans    &kp MINUS       &kp N4  &kp N5    &kp N6  &kp GRAVE
&trans  &trans        &trans        &trans     &trans          &trans    &kp UNDERSCORE  &kp N1  &kp N2    &kp N3  &kp BACKSLASH  &trans
                                    &trans     &trans          &trans    &kp PLUS        &kp N0  &kp PIPE
            >;

            label = "NUM";
        };

        navigation_layer {
            bindings = <
        &trans        &trans        &trans     &trans          &trans    &kp C_PREVIOUS  &kp PAGE_UP    &kp INSERT      &kp HOME         &kp C_VOLUME_UP
        &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans    &kp C_PAUSE     &kp LEFT       &kp UP_ARROW    &kp RIGHT_ARROW  &kp C_MUTE
&trans  &trans        &trans        &trans     &trans          &trans    &kp C_NEXT      &kp PAGE_DOWN  &kp DOWN_ARROW  &kp END          &kp C_VOLUME_DOWN  &trans
                                    &trans     &trans          &trans    &trans          &trans         &trans
            >;

            label = "NAV";
        };

        function_layer {
            bindings = <
            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans    &kp F7  &kp F8  &kp F9  &kp F10
            &trans        &trans        &trans        &trans        &trans          &trans    &kp F4  &kp F5  &kp F6  &kp F11
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans          &kp CLCK  &kp F1  &kp F2  &kp F3  &kp F12  &kp PRINTSCREEN
                                        &trans        &trans        &trans          &trans    &trans  &trans
            >;

            label = "FUN";
        };

        game_layer {
            bindings = <
          &kp TAB    &kp Q  &kp X       &kp E      &kp R          &trans  &trans  &trans  &trans  &trans
          &kp LCTRL  &kp A  &kp W       &kp D      &kp F          &trans  &trans  &trans  &trans  &trans
&kp LALT  &kp LSHFT  &kp Z  &kp S       &kp C      &kp V          &trans  &trans  &trans  &trans  &trans  &trans
                            &kp ESCAPE  &kp SPACE  &lt 5 ENTER    &trans  &trans  &trans
            >;

            label = "GME";
        };

        game_layer_ext {
            bindings = <
       &kp NUMBER_1  &kp N2  &kp N3  &kp N4  &kp N5    &trans  &trans  &trans  &trans  &trans
       &trans        &trans  &trans  &trans  &kp H     &trans  &trans  &trans  &trans  &trans
&to 0  &trans        &trans  &trans  &kp T   &kp Y     &trans  &trans  &trans  &trans  &trans  &trans
                             &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "GME+";
        };
    };
};
